parameters:
- name: environment
  displayName: ambiente destino
  default: dev
  # do NOT change these values, they are used internally on "if" conditions
  values: ['auto', 'dev', 'uat', 'prd']
- name: build
  type: boolean
  default: true
- name: package_for_deploy
  type: boolean
  default: false  
- name: deploy
  type: boolean
  default: true

trigger: none

resources:
  repositories:
  - repository: devopsutils
    type: bitbucket
    endpoint: Bitbucket - devopsbse
    name: ibkteam/bse-ibkteam-devops-utils
    ref: feature/bse-ifx

stages:
- ${{ if eq(parameters.build, true) }}:
  - stage: Build
    pool:
      vmImage: 'ubuntu-20.04'
    variables:
    - group: Artifactory
    - group: azure_${{parameters.environment}}
    jobs:
      - job: build
        steps:
        - checkout: devopsutils
        - checkout: self
          persistCredentials: true

        - script: |
            source $(Build.SourcesDirectory)/bse-ibkteam-devops-utils/common/set_vars.sh $(Build.Repository.Name) $(Build.SourcesDirectory)            
            export subRepoName=audit-redact
            echo "##vso[task.setvariable variable=subRepoName]$subRepoName"
            export subRepoPath=$repopath/$subRepoName
            echo "##vso[task.setvariable variable=subRepoPath]$subRepoPath"
            export currentImage=$(az_acr)/ms/$subRepoName
            echo "##vso[task.setvariable variable=currentImage]$currentImage"
          displayName: set vars

        - script: |
            chmod +x $(devopsutilspath)/common/calculate_tag.sh
            $(devopsutilspath)/common/calculate_tag.sh $(Pipeline.Workspace) $(Build.SourceBranch) $(repopath) $(devopsutilspath)
          displayName: calculate tags

        - task: Docker@2
          displayName: login ACR
          inputs:
            command: login
            containerRegistry: bsep-acr-${{parameters.environment}}-sv
            
        - script: |
            set -e
            cd $(subRepoPath)                
            echo building $(currentImage):$(tag)
            docker build -t $(currentImage):$(tag) .
            docker push $(currentImage):$(tag)
          displayName: 'docker build push'
          
        - task: Docker@2
          displayName: logout ACR
          inputs:
            command: logout
            containerRegistry: bsep-acr-${{parameters.environment}}-sv
            
        - script: |
            cd $(subRepoPath)
            chmod +x $(devopsutilspath)/common/add_build_tag.sh
            $(devopsutilspath)/common/add_build_tag.sh $(tag)
          displayName: add and push tag

- ${{ if eq(parameters.package_for_deploy, true) }}:
  - stage: package_for_deploy
    pool:
      vmImage: 'ubuntu-20.04'
    variables:
    - group: openshift_${{parameters.environment}}
    - group: azure_${{parameters.environment}}    
    jobs:
      - job: package_for_deploy
        steps:
        - checkout: devopsutils
        - checkout: self

        - script: |
            source $(Build.SourcesDirectory)/bse-ibkteam-devops-utils/common/set_vars.sh $(Build.Repository.Name) $(Build.SourcesDirectory)            
            chmod +x $devopsutilspath/common/calculate_tag.sh
            $devopsutilspath/common/calculate_tag.sh $(Pipeline.Workspace) $(Build.SourceBranch) $repopath $devopsutilspath
            export subRepoName=audit-redact
            echo "##vso[task.setvariable variable=subRepoName]$subRepoName"
            export subRepoPath=$repopath/$subRepoName
            echo "##vso[task.setvariable variable=subRepoPath]$subRepoPath"
            export currentImage=$(az_acr)/ms/$subRepoName
            echo "##vso[task.setvariable variable=currentImage]$currentImage"
            echo "##vso[task.setvariable variable=release_name]$subRepoName"
            sudo snap install yq
          displayName: set up vars, tags, yq

        - script: |
            chmod +x $(subRepoPath)/create_helm_package.sh
            $(subRepoPath)/create_helm_package.sh "${{parameters.environment}}" \
              "$(tag)" "$(az_acr)" "$(release_name)" "$(subRepoName)" "$(subRepoPath)" \
              "$(devopsutilspath)" "$(devopsutilstag)" "$(ocp_namespace)" "$(Pipeline.Workspace)"
          displayName: create package

        - task: ArtifactoryGenericUpload@2      
          inputs:
            artifactoryService: 'artifactory-ibk'
            specSource: 'taskConfiguration'
            fileSpec: |
              {
                "files": [
                  {
                    "pattern": "$(Pipeline.Workspace)/$(tag)-${{parameters.environment}}.zip",
                    "target": "bse-ifx-snapshot-local/ms/$(subRepoName)/",
                    "explode": "false"
                  }
                ]
              }
          displayName: upload helm chart zip to artifactory


- ${{ if eq(parameters.deploy, true) }}:
  - stage: Deploy
    pool: apjarvis 
    variables:
    - group: openshift_${{parameters.environment}}
    - group: azure_${{parameters.environment}}    
    jobs:
    - job: deploy
      steps:
      - checkout: devopsutils
      - checkout: self

      - script: |
          source $(Build.SourcesDirectory)/bse-ibkteam-devops-utils/common/set_vars.sh $(Build.Repository.Name) $(Build.SourcesDirectory)            
          chmod +x $devopsutilspath/common/calculate_tag.sh
          $devopsutilspath/common/calculate_tag.sh $(Pipeline.Workspace) $(Build.SourceBranch) $repopath $devopsutilspath
          export subRepoName=audit-redact
          echo "##vso[task.setvariable variable=subRepoName]$subRepoName"
          export subRepoPath=$repopath/$subRepoName
          echo "##vso[task.setvariable variable=subRepoPath]$subRepoPath"
          export currentImage=$(az_acr)/ms/$subRepoName
          echo "##vso[task.setvariable variable=currentImage]$currentImage"
          echo "##vso[task.setvariable variable=release_name]$subRepoName"
        displayName: set up vars, tags, yq

      - script: |
          chmod +x $(subRepoPath)/create_helm_package.sh
          $(subRepoPath)/create_helm_package.sh "${{parameters.environment}}" \
            "$(tag)" "$(az_acr)" "$(release_name)" "$(subRepoName)" "$(subRepoPath)" \
            "$(devopsutilspath)" "$(devopsutilstag)" "$(ocp_namespace)" "$(Pipeline.Workspace)"
        displayName: create package  

      - task: HelmDeploy@0
        displayName: Helm install
        inputs:
          connectionType: Kubernetes Service Connection
          kubernetesServiceEndpoint: bsep-openshift-ace-smp-${{parameters.environment}}
          command: upgrade
          chartType: FilePath
          chartPath: $(Pipeline.Workspace)/$(tag)-${{parameters.environment}}/chart.tgz
          namespace: $(ocp_namespace)
          releaseName: $(release_name)          
          arguments: --reset-values --debug --timeout 3m0s